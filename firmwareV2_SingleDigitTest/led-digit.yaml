esphome:
  name: seven-seg-test
  friendly_name: Seven Segment Test

esp8266:
  board: d1_mini

logger:

# Add OTA configuration
ota:
  platform: esphome
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  ap:
    ssid: "Seven-Seg-Test"
    password: "configureme"

light:
  - platform: neopixelbus
    type: RGB
    pin: GPIO4
    num_leds: 15
    name: "LED Strip"
    id: led_strip
    variant: WS2812
    default_transition_length: 0s
    restore_mode: ALWAYS_ON
    on_turn_on:
      then:
        - light.turn_on:
            id: led_strip
            effect: "Segment Test"
    effects:
      - addressable_lambda:
          name: "Segment Test"
          update_interval: 250ms
          lambda: |-
            static int current_led = 0;
            // Turn all LEDs off first
            for (int i = 0; i < 15; i++) {
              it[i] = Color(0, 0, 0);
            }
            // Light current LED with specific color
            switch (current_led) {
              case 0:
                it[0] = Color(0, 200, 0);
                it[1] = Color(0, 200, 0);
                it[2] = Color(0, 200, 0);
                it[4] = Color(0, 200, 0);
                it[5] = Color(0, 200, 0);
                it[6] = Color(0, 200, 0);
                break;
              case 1:
                it[1] = Color(0, 200, 0);
                it[5] = Color(0, 200, 0);
                break;
              case 2:
                it[0] = Color(0, 200, 0);
                it[2] = Color(0, 200, 0);
                it[3] = Color(0, 200, 0);
                it[5] = Color(0, 200, 0);
                it[6] = Color(0, 200, 0);
                break;
              case 3:
                it[0] = Color(0, 200, 0);
                it[1] = Color(0, 200, 0);
                it[3] = Color(0, 200, 0);
                it[5] = Color(0, 200, 0);
                it[6] = Color(0, 200, 0);
                break;
              case 4:
                it[1] = Color(0, 200, 0);
                it[3] = Color(0, 200, 0);
                it[4] = Color(0, 200, 0);
                it[5] = Color(0, 200, 0);

                break;
              case 5:
                it[0] = Color(0, 200, 0);
                it[1] = Color(0, 200, 0);
                it[3] = Color(0, 200, 0);
                it[4] = Color(0, 200, 0);
                it[6] = Color(0, 200, 0);
                break;
              case 6:
                it[0] = Color(0, 200, 0);
                it[1] = Color(0, 200, 0);
                it[2] = Color(0, 200, 0);
                it[3] = Color(0, 200, 0);
                it[4] = Color(0, 200, 0);
                it[6] = Color(0, 200, 0);
                break;
              case 7:
                it[1] = Color(0, 200, 0);
                it[5] = Color(0, 200, 0);
                it[6] = Color(0, 200, 0);
                break;
              case 8:
                it[0] = Color(0, 200, 0);
                it[1] = Color(0, 200, 0);
                it[2] = Color(0, 200, 0);
                it[3] = Color(0, 200, 0);
                it[4] = Color(0, 200, 0);
                it[5] = Color(0, 200, 0);
                it[6] = Color(0, 200, 0);
                break;
              case 9:
                it[0] = Color(0, 200, 0);
                it[1] = Color(0, 200, 0);
                it[3] = Color(0, 200, 0);
                it[4] = Color(0, 200, 0);
                it[5] = Color(0, 200, 0);
                it[6] = Color(0, 200, 0);
                break;
            }
            current_led++;
            if (current_led > 9) {
              current_led = 0;
            }